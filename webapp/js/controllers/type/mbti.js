app.controller('controllers.userTest.mbti', ['$http', '$scope', '$user','$timeout', function ($http, $scope, $user,$timeout) {

    $scope.user = $user;
    var questions = ["나는 ____이 좋다.", "처음 만나는 사람을 보면 어떤 기분이 드나요?", "'해야할 일 목록'을 작성하는 것을 좋아하나요?", "다른 사람들은 나를 알기 쉬운 사람이라고 생각하나요?", "관심을 받는 느낌은 어떠한가요?", "나는 말할 때 생각하며 말을 하나요, 아니면 생각을 한 후에 말을 하나요?", "나는 '말'을 잘 하나요?", "나는 어떤 사람과도 수다를 떨 수 있나요?", "나의 사교성은?", "나의 관심은?", "일상 생활에서든 회사에서든 나는 ____이(가) 더 좋다.", "나의 취미는?", "나는 평소에 컴퓨터나 휴대폰 등으로 게임하는 것을 즐긴다.", "내가 더 믿는 것은?", "나의 성별은?", "나는 어떠한 사람인가요?", "만약 현실적인 한계가 없다면, 나는 어떤 일을 더 선호할까요?", "나는 어떠한 방식으로 무언가를 이해하고 설명하나요?", "나는 어떠한 사람인가요?", "나는 무엇을 하기를 좋아하나요?", "내가 더 중요히 여기는 것은?", "남이 하는 말을 들을 때면...", "나의 생활 방식은?", "내가 어떠한 이론을 이해할 때...", "나는...", "나는 평소에...", "나는 토론을 좋아하나요?", "나는 어떠한 사람인가요?", "나는 가끔...", "나의 생각을 표현할 때...", "다른 사람들과 함께 지낼 때...", "나를 표현할 때는...", "나에게 공평이란?", "표현할 때 가장 중요한 것은 무엇인가요?", "비평에 대해 어떻게 생각하나요?", "남의 눈에 나는...", "나는 _____에 따른다.", "내가 더 좋아하는 것은 무엇인가요?", "나의 집중력은?", "데드라인에 대한 나의 태도?", "나는 ____고 생각한다.", "무언가를 할 때....", "시간을 지키는 것은 중요하나요?", "나는 어디에서 힘을 얻나요?", "나는 계획 짜는 것을 좋아하나요?", "나만의 공간에서...", "일과 오락에 대한 나의 태도는?"];

    var answers = ["무엇이든 그대로 유지되는 것", "변화와 새로운 것", "새로운 만남을 시작하는 것은 매우 흥미로운 일이며, 어떤 사람과도 이야깃거리 있다.", "나는 모르는 사람들과 함께 있는 것이 불편하고 익숙하지 않다. 어떤 사람들은 내가 내성적이라고 생각하기도 한다.", "좋아한다. 내가 어떠한 일을 해 내었을 때 만족감과 성취감을 느끼며, 한가지 일을 마치고 다음 일을 시작한다.", "별로 좋아하지 않는다. 작성을 한다고 해도 목록대로 엄격히 실천하지 않는다. 그것은 그냥 나에게 주의를 주는 역할을 할 뿐이다.", "매우 알기 쉽다고 생각한다. 대부분의 사람들은 내가 우호적이고 활기차다고 생각한다.", "쉽게는 알지 못한다. 나는 먼저 나서지 않고 다른 사람이 어떤 제안을 할 때까지 기다리는 편이다.", "나는 관심의 중심이 되는 것을 즐긴다. 스포트라이트 받는 것이 좋다.", "나는 관심의 중심이 되는 것을 피하는 편이다.", "생각하며 말한다.", "생각 후 말한다.", "매우 잘 하는 편이다. 가끔은 내가 쉬지 않고 말해서 타인이 내 말을 끊어야만 멈추기도 한다.", "나는 타인과 오래 이야기하는 것을 좋아하지 않는다. 전화보다는 문자나 SNS를 사용하는 것이 더 편하다.", "난 언제 어디서나 누구랑도 열정적인 대화가 가능하다.", "나는 일대일 대화나 작은 범위 내에서 이야기 하는 것을 선호한다.", "나는 일명 '마당발'이라고 할 수 있을 만큼 아는 사람과 친한 사람이 많다.", "나는 소수의 사람들하고만 친하게 지내고, 친구를 선택할 때 매우 조심하는 편이다.", "더 큰 외부의 세계에 있다.", "나만의 세계에 있다. 나는 꽤 긴 시간을 자기반성 하는데 보낸다.", "팀워크(많은 사람들과 함께 토론하고 함께 일하는 것에서 큰 편안함을 느낀다.)", "내가 스스로 할 수 있는 일은 최대한 스스로 하고 나만의 공간과 나만의 자유를 느끼는 것", "매우 다양하다. 무엇에든 다 조금씩 관심이 있다.", "적다. 나는 한가지(혹은 소수)만 파는 것을 좋아한다.", "그렇다. 가상세계는 나에게 기쁨을 가져다 준다.", "그렇지 않다. 시간낭비이다.", "사실과 정확하고 뚜렷한 정보.", "나의 직감과 영감, 상상력, 그리고 통찰력.", "남", "여", "나는 상상속에 사는 사람이다. 나는 종종 머릿속의 다른 생각들에 심취되곤 한다. 현실에 별로 관심 갖지 않는다.", "나는 착실하고 진지하게 일하며，꿈을 꾸는 데 많은 시간을 할애하지 않는다.", "나는 복잡한 추상적인 이론을 연구하기보다는 구체적인 임무를 완성하는 것이 더 좋다.", "나는 반복적인 일보다는 연결성, 추세, 가능성 등을 발견하고 분석하는 것을 좋아한다.", "나는 그 자체의 실제 상황에 따라 이해하고, 환원하고, 묘사하기를 좋아한다. 나는 '그것이 어떻게 왔는가'가 더 중요하다.", "나는 은유와 비유하는 것을 좋아하고, '그것은 아마 어떠할 것이다'에 초점을 맞춘다.", "나는 정밀한 것이 좋은 뛰어난 관찰자이다. 나는 내 주변에 있는 실마리를 관찰하고 기억할 수 있다.", "나는 자유롭게 미래를 상상하는 것을 좋아한다. 언제나 나만의 규율을 찾으며 지루한 디테일은 싫다.", "나는 나의 능력을 이용하고 발전시키는 것이 좋다. 나는 가구를 해체하고 다시 조립하거나, 기계를 제조하거나, 직접 공예품을 만드는 등 몸소 체험하고 실천하는 일을 좋아한다.", "나는 내가 기존에 가지고 있는 능력에 만족하지 못하고 언제나 새로운 아이디어나 창조적인 방법을 기획하고 시도한다.", "경험.", "추론, 사물의 깊은 의미 찾아내기.", "나는 다른사람의 암시나 은유 등을 잘 이해하지 못한다.", "나는 말의 숨은 뜻을 쉽게 이해한다.", "현재를 즐기고 현재에 만족한다.", "항상 더 큰 미래를 꿈꾼다.", "나는 상대방이 구체적인 예와 함께 실제의 응용을 이야기 해주길 바란다.", "나는 어떠한 추상적인 이론을 신속히 이해하는 것이 좋다. 나에게 과도한 상세한 설명을 하거나 어떠한 사실을 묘사하는 것은 지루할 뿐만 아니라 그저 시간낭비일 뿐이다.", "전체가 아닌 디테일을 본다.", "디테일이 아닌 전체를 본다.", "객관적으로, 그리고 논리적으로 충분한 생각을 한 후 결정을 내리는 것을 좋아한다.", "내가 말하는 한마디 한마디와 내가 하는 모든 행위가 다른 사람들에게 어떠한 영향을 내릴 지 항상 생각한다.", "좋아하지 않는다. 누군가와 충돌하거나 남에게 상처주는 것이 두렵다.", "좋아한다. 나는 나의 주장을 펼치고 내 관점을 방어하는 것을 좋아한다.", "나는 강한 동정심, 자상함, 열정을 가지고 있다. 어떨 땐 사람들이 너무 감성적이라고 말하기도 한다.", "나는 냉정적이고 이성적이다. 남의 감정이나 누가 무얼 필요로 하는지 잘 알지 못한다.", "객관적인 사실을 과도하게 중시하는 반면 인정이 없을 때가 있다.", "다른 사람들을 과도하게 생각하고 심지어 남에게 이용당하거나 속기도 한다.", "남이 어떻게 생각할 지가 매우 중요하다.그래서 언제나 남들이 나의 생각을 맘에 들어하지 않는데 겉으로만 표출하지 않는 것이 아닌가 걱정한다.", "나는 직접적으로 솔직히 내 생각을 이야기한다. 다른 사람들의 생각이 나랑 같든 말든 상관없다.", "나는 그들의 생각과 아이디어가 매우 흥미롭지만 그들의 감정이나 기분에는 별로 민감하지 않다.", "그들은 나에게서 위로와 따뜻함을 찾아가곤 한다. 나 역시 그들에게 작게나마 힘이 되었으면 좋겠다고 생각한다.", "나는 나의 감정을 노출하는 것을 좋아하지 않는다.", "내가 무엇을 필요로 하는 지 입을 열기가 어려울 때가 있다. 특히 다른 사람과 의견 충돌이 있을 때면 나 자신을 희생시키기도 한다.", "누구에게나 다 똑같은 것. 모든 사람들이 다 같은 원칙과 방법으로 대우 받아야 한다.", "사람마다 다른 방식으로 대우받아야 하는 것. 각각 사람마다 사정이 다르기 때문이다.", "솔직함이 융통성보다 중요하다.", "융통성이 진실보다 중요하다. 하나의 생각을 표현하기 위해서 분위기를 깰 필요는 없다.", "남을 비평할 때 나는 망설이지 않는다. 나는 이것을 적극적인 의견이며 타인의 발전과 성장에 도움이 된다고 생각한다.", "남을 비평할 때 타인의 감정을 상하게 하므로 반드시 말해야 한다면 돌려서 말한다.", "나만의 생각이 뚜렷하고 다른사람이 어떻게 생각하든 별로 신경쓰지 않는 사람.", "친절하고 착하며 다른사람의 생각을 많이 신경쓰는 사람.", "대뇌의 지휘", "감정의 수요", "더 많은 정보를 얻은 후에 결정하는 것. 언제나 신중하게 생각하고 행동하기. 나는 새로운 무언가를 생각할 때 매우 기쁘고 흥분한다.", "신속한 결정과 완성. 무언가가 해결이 안된 채로 남아있는 것은 싫다. 모든 것을 다 끝내야만 편안함을 느낀다.", "나만의 일에 집중하기 쉽다. 주변이 어수선할 때면 나는 집중하기가 힘들고 정신적으로 긴장을 풀 수가 없다.", "집중을 할 수 없는 것은 아니지만 각각 다른 과목이나 종목, 프로젝트 등을 각 다른 방식으로 해 나간다.", "나는 나만의 일하는 방식과 과정이 있다. 데드라인 전 마지막 1초에 변화가 있거나 나의 일에 지장이 생기는 것은 끔찍하다.", "데드라인이란 언제든 바뀔 수 있는 대략적인 날짜일 뿐이다.  만약 마지막 1초에 변화가 생기거나 처음부터 다시 해야한다고 해도 별 상관은 없다.", "물건을 정리 없이 아무렇게나 놓는 것이 편하다.", "어떤 물건이든 각자 있어야 할 제 자리가 있다.", "무엇이든 미리미리 해놓는 것이 좋다. 심지어 마감일이 되기도 전에 뭐든 미리 다 해놓는다.", "나는 마감일이 다가올 때가 되어서야 시작한다. 가끔은 마감일 전에 끝내지 못하기도 한다.", "그렇게 중요하지는 않다. 시간은 반드시 지켜야 하는 눈금 같은 것이 아니다. 나에게 1시 45분은 1시 반이나 마찬가지고 시간은 그냥 대략적인 구간같은 것이다.", "매우 중요하다. 시간은 매우 정확한 눈금이고 1시반은 말 그대로 1시 반이다. 다른 사람이 시간을 중요하게 생각하지 않는 것은 나를 분노하게 한다.", "다른사람과 이야기하거나 모임을 가질 때. 그래서 나는 큰 모임에 자주 참여하고 많은 사람과 친분을 맺는다.", "혼자 있을 때. 그래서 나는 독거를 즐긴다. 나는 나만의 프라이버시가 있는 공간과 나만의 시간을 갖는 것이 필요하다.", "좋아한다. 게다가 난 그 계획을 고집해서 끝까지 해내고 만다. 계획이 없으면 불안함을 느낀다.", "그렇게 좋아하지는 않는다. 나는 계획없이 떠돌다 우연히 마주치는 기쁨같은 것을 즐긴다.", "나는 질서정연한 생활방식이 좋다. 어떤 사람은 내가 과도하게 체계적이라고 말한다.", "나는 이것저것 잘 빠뜨린다. 어떤 사람들은 나의 집이나 사무실을 보고 너무 무질서하다고 말할지도 모른다.", "나는 해야할 일을 모두 마친 후 여가시간을 갖는 것이 좋다.", "해야할 일을 하는 동시에 틈틈히 쉰거나 논다. 심지어 나의 여가시간은 일하는 시간 전에 배치되어 있기도 하다."];

    var types = ["S", "N", "E", "I", "J", "P", "E", "I", "E", "I", "E", "I", "E", "I", "E", "I", "E", "I", "E", "I", "E", "I", "E", "I", "A", "B", "S", "N", "Y", "X", "N", "S", "S", "N", "S", "N", "S", "N", "S", "N", "S", "N", "S", "N", "S", "N", "S", "N", "S", "N", "T", "F", "F", "T", "F", "T", "T", "F", "F", "T", "T", "F", "T", "F", "T", "F", "T", "F", "T", "F", "T", "F", "T", "F", "P", "J", "J", "P", "J", "P", "P", "J", "J", "P", "P", "J", "E", "I", "J", "P", "J", "P", "J", "P"];

    $scope.mbti = [];
    for (var i = 0; i < questions.length; i++) {
        var each = {};
        each.question = questions[i];
        each.answers = [];
        for (var j = 0; j < 2; j++) {
            var answer = {};
            answer.answer = answers[2 * i + j];
            answer.type = types[2 * i + j];
            each.answers.push(answer);
        }
        $scope.mbti.push(each);
    }

    $scope.value = {E: 0, S: 0, F: 0, J: 0, I: 0, N: 0, T: 0, P: 0};

    $scope.$watch("mbti", computeType, true);

    function computeType() {

        $scope.disabled = true;
        $timeout(function(){
            $scope.disabled = false;
        }, app.setting.questionDelay);

        $scope.value = {E: 0, S: 0, F: 0, J: 0, I: 0, N: 0, T: 0, P: 0};
        $scope.testDone = 0;
        $scope.mbti.forEach(function (each) {
            if (each.selectedType == undefined)
                return;
            $scope.testDone++;
            $scope.value[each.selectedType]++;
        });
        if ($scope.testDone != 47)
            return;
        $scope.userType = userType();

    }

    var userType = function () {
        var type = [];
        if ($scope.value.E > $scope.value.I) {
            type.push("E");
        } else {
            type.push("I");
        }
        if ($scope.value.S > $scope.value.N) {
            type.push("S");
        } else {
            type.push("N");
        }
        if ($scope.value.F > $scope.value.T) {
            type.push("F");
        } else {
            type.push("T");
        }
        if ($scope.value.J > $scope.value.P) {
            type.push("J");
        } else {
            type.push("P");
        }
        return type.join("");
    };

    $scope.showResult = function () {
        var result = userType();
        app.findScope('result').setResult("MBTI", result);
        var test = {};
        test.name = "MBTI";
        test.result = result;

        $http(req("POST", "/api/test", {test: JSON.stringify(test)})).success(function (response) {
            if (response.error) {
                error(response.errorMessage);
                return;
            }
            $scope.test = response.obj;
            app.findScope('user').refresh();
        });
    }

}]);


/**
 * Created by park on 15. 4. 1..
 */
app.directive("mbti", function () {
    return {
        restrict: 'E',
        templateUrl: "directive/userTest/mbti.div",
        controller: "controllers.userTest.mbti",
        scope: true
    }
});